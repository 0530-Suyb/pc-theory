1. AdaChain根据负载自适应调整系统架构，但事实上负载可能是掺杂着来的，是否存在一种架构对所有类型负载都很适用，不太可能。而可编程共识针对每类负载提供一套接口模块，模块配置实现不同类型的架构，以实现最优匹配。不过多套架构一起工作势必存在一些协调的工作负担。
2. pc-ledger的冲突型测试立不住脚，OEV不存在EOV的冲突问题，而是说在并行的OEV架构中OE阶段的并行可能有冲突，到V阶段检查出来。但如果让E串行，O和V并行，可以解决，只是慢了些。冲突应该通过分池解决，不同交易池打包出不同的块，不同交易的交易正交。
3. XOV#构建事务依赖图和无循环调度，实现可串行化隔离，隔离开的交易就可并行执行而不存在冲突了，会冲突的交易被串行化执行了。pc-ledger的依赖型交易只从交易等待时延进行考虑，如果没有依赖检测是否就导致交易失败，交易有效率下降。
4.